INTRO TO DOCKER

Objectives
- What is docker trying to solve?
    - Docker is trying make the development experience seamless across different development enviornments

- What is docker?
    - Docker helps us contain a development enviornment and to be able to share it across different systems.

- What are docker images and containers?

Docker Image - 
    - Instructions telling docker how to create the container. Instructions include what build, location, port, commands, packages that should be installed etc. A Docker image basically is a template that defines how an image will be realized at runtime. Think of this as a recipe.

Docker Container - 
    - The virtual operating system itself. How it will operate will depend on the docker image.


Docker Image vs. Docker Container -
    - The key difference between a docker image and a docker container is that a docker image is a template that defines how a docker container will be realized. A docker container is a runtime instance of a docker image.


Demo:

Dockerfile - contains a set of Docker instructions that will help create a Docker Image [x]


FROM - will provide the base image 

COPY - bundle your app's source inside the docker image 


WORKDIR - changes the working directory

RUN - command that triggers when we build the docker image. 

CMD - command triggers any launches when you run the image in the container

Docker Image - A set of instructions that contains all the information that a container needs to be built exactly the same way across any system. [x]

Docker build . -t dockerpractice

Docker Container - The virtual operating system. 

docker run -p 3000:3000 dockerpractice


//
1. create a react project from scratch
2. create a docker file for that project
3. create a docker image
4. run that image in a container
    - test if your project is running via docker

** share the docker image with another apprentice
    - see if the other apprentice can run the project in a docker container